{"version":3,"sources":["components/Header.tsx","hooks/usePositiveNumberForm.tsx","utils/calculators.ts","config/options.tsx","components/DurumButton.tsx","components/DurumContent.tsx","utils/formatters.ts","components/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["Header","props","className","onClick","setIsSettingsVisible","isSettingsVisible","usePositiveNumberForm","defaultValue","isIntOnly","useState","positiveNumberForm","setPositiveNumberFormInternal","setPositiveNumberForm","value","parseInt","parseFloat","durumLinks","currency","DurumButton","rnd","Math","floor","random","length","window","open","getRandomDurumLink","DurumContent","num","money","durumMoney","setDurumMoney","durumCounter","setDurumCounter","useEffect","durumCost","durumCount","Card","Row","type","placeholder","onChange","e","target","toString","Col","Intl","NumberFormat","style","format","Array","map","i","SettingsMenu","setDurumCost","App","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62573f30.chunk.js","sourcesContent":["interface Props {\r\n    isSettingsVisible: any,\r\n    setIsSettingsVisible: any\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n    return (\r\n        <header className=\"mt-3 text-center\">\r\n            <h1 className=\"text-center\">D√ºr√ºmulator</h1>\r\n            <p className=\"h6\">D√ºnyanƒ±n en <button className=\"settings-button\" onClick={() => props.setIsSettingsVisible(!props.isSettingsVisible)}>geli≈ümi≈ü</button> d√ºr√ºm miktarƒ± hesaplama aracƒ±</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { useState } from \"react\";\r\n\r\nconst usePositiveNumberForm = (defaultValue: number = 0, isIntOnly: boolean = false) => {\r\n\r\n\tconst [positiveNumberForm, setPositiveNumberFormInternal] = useState(defaultValue);\r\n\r\n\tconst setPositiveNumberForm = (value: any): void => {\r\n\t\tif (value) {\r\n\t\t\tif (isIntOnly) {\r\n\t\t\t\tvalue = parseInt(value) as number;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = parseFloat(value) as number;\r\n\t\t\t}\r\n\r\n\t\t\t// save the value only if it is bigger than 0\r\n\t\t\tif (value > 0) {\r\n\t\t\t\tsetPositiveNumberFormInternal(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetPositiveNumberFormInternal(defaultValue);\r\n\t\t}\r\n\t}\r\n\r\n\treturn [positiveNumberForm, setPositiveNumberForm] as const\r\n}\r\n\r\nexport default usePositiveNumberForm;","export const calculateDurumCount = (money: number, durumCost: number): number => {\r\n    return money / durumCost;\r\n}","import { ICurrency } from \"../types/types\";\r\n\r\nexport const durumLinks: string[] = [\r\n    \"https://www.google.com/search?q=d√ºr√ºmc√º\",\r\n    \"https://www.google.com/search?q=d√ºr√ºm\",\r\n    \"https://www.google.com/search?q=yemekseeti+d√ºr√ºm\",\r\n    \"https://www.duckduckgo.com?q=d√ºr√ºm\",\r\n    \"https://www.nefisyemektarifleri.com/kategori/tarifler/hizli-yemekler/durum-tarifleri/\"\r\n]\r\n\r\nexport const currency: ICurrency = { name: \"T√ºrk Lirasƒ±\", shortName: \"TL\", symbol: \"‚Ç∫\" };\r\nexport const durumEmoji: string = \"üåØ\";\r\nexport const defaultDurumCost: number = 15;\r\nexport const maxDurumDrawingNumber: number = 1000;\r\nexport const maxDurumErrorMessage: string = \"Burada duralƒ±m sayfa kasmasƒ±n, biraz da muz ye üçå\";\r\nexport const enjoyMealMessage: string = \"Afiyet olsun karde≈üim\";","import { durumLinks, durumEmoji } from '../config/options'\r\n\r\nconst DurumButton = () => {\r\n\r\n    const getRandomDurumLink = (durumLinks: string[]): void => {\r\n        const rnd = Math.floor(Math.random() * durumLinks.length);\r\n        window.open(durumLinks[rnd], \"_blank\");\r\n    }\r\n\r\n    return (\r\n        <button className=\"durum-button\" onClick={() => getRandomDurumLink(durumLinks)}>\r\n            {durumEmoji}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DurumButton;\r\n","// react\r\nimport { useState, useEffect } from 'react';\r\n\r\n// bootstrap\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\n\r\n// hooks\r\nimport usePositiveNumberForm from '../hooks/usePositiveNumberForm';\r\n\r\n// utils\r\nimport { currencyFormatter, numberFormatter } from '../utils/formatters';\r\nimport { calculateDurumCount } from '../utils/calculators';\r\n\r\n// components\r\nimport DurumButton from '../components/DurumButton';\r\n\r\n// options\r\nimport { currency, maxDurumDrawingNumber, maxDurumErrorMessage, enjoyMealMessage } from '../config/options';\r\n\r\n\r\ninterface Props {\r\n    durumCost: any\r\n}\r\n\r\nconst DurumContent = (props: Props) => {\r\n\r\n    // durum money form input\r\n\tconst [durumMoney, setDurumMoney] = usePositiveNumberForm();\r\n\r\n    // durum amount counter\r\n\tconst [durumCounter, setDurumCounter] = useState(0);\r\n\r\n    // calculates durum count when durumMoney or durumCost changes\r\n\tuseEffect(() => {\r\n\t\tconst durumCount = calculateDurumCount(durumMoney, props.durumCost);\r\n\t\tsetDurumCounter(durumCount);\r\n\t}, [durumMoney, props.durumCost]);\r\n\r\n\r\n    return (\r\n        <Card className=\"mt-5 mb-3 p-3 col-md-9 col-auto mx-auto\">\r\n\r\n            {/* durum price form */}\r\n            <Row>\r\n                <div className=\"input-group\">\r\n                    <span className=\"input-group-text\">Fiyat {currency.symbol}</span>\r\n                    <input type=\"number\" className=\"form-control\" aria-label=\"Miktar\" placeholder=\"√∂r: 30\" onChange={(e: any) => setDurumMoney(e.target.value)} value={durumMoney.toString()} />\r\n                </div>\r\n            </Row>\r\n\r\n            {/* display durum count */}\r\n            <Row className=\"mt-3\">\r\n                <Col>\r\n                    {`${currencyFormatter(durumMoney)} ${currency.shortName} ile ${numberFormatter(durumCounter)} d√ºr√ºm yiyebilirsin`}\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* display durum buttons */}\r\n            <Row className=\"mt-3\">\r\n                <Col>\r\n                    {\r\n                        durumCounter < maxDurumDrawingNumber\r\n                            ?\r\n                            <>\r\n                                {[...Array(Math.floor(durumCounter))].map((e, i) => <DurumButton key={i} />)}\r\n                                {\r\n                                    durumCounter >= 1 &&\r\n                                    <div className=\"mt-3\">\r\n                                        {enjoyMealMessage}\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                            :\r\n                            <>\r\n                                {[...Array(maxDurumDrawingNumber)].map((e, i) => <DurumButton key={i} />)}\r\n                                <div className=\"mt-3\">\r\n                                    {maxDurumErrorMessage}\r\n                                </div>\r\n                            </>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default DurumContent","function currencyFormatter(money: number): string {\r\n    const formatter = new Intl.NumberFormat('tr-TR', {\r\n        style: 'currency',\r\n        currency: 'TRY',\r\n    });\r\n\r\n    return formatter.format(money);\r\n}\r\n\r\nfunction numberFormatter(num: number): string {\r\n    const formatter = new Intl.NumberFormat('tr-TR');\r\n    return formatter.format(num);\r\n}\r\n\r\nexport { currencyFormatter, numberFormatter };\r\n","// react\r\nimport { useEffect } from 'react';\r\n\r\n// bootstrap\r\nimport { Card } from 'react-bootstrap';\r\n\r\n// hooks\r\nimport usePositiveNumberForm from '../hooks/usePositiveNumberForm';\r\n\r\n// options\r\nimport { currency, defaultDurumCost, durumEmoji } from '../config/options';\r\n\r\n\r\ninterface Props {\r\n    durumCost: any,\r\n    setDurumCost: any\r\n}\r\n\r\nconst SettingsMenu = (props: Props) => {\r\n\r\n    const [positiveNumberForm, setPositiveNumberForm] = usePositiveNumberForm(props.durumCost);\r\n\r\n    useEffect(() => {\r\n        props.setDurumCost(positiveNumberForm)\r\n    }, [positiveNumberForm])\r\n\r\n    return (\r\n        <Card className=\"mb-3 p-3 col-md-9 col-auto mx-auto\">\r\n            <div className=\"mb-3\">\r\n                √áok gizli ayar men√ºs√º\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <span className=\"input-group-text\">Birim {durumEmoji} fiyatƒ± {currency.symbol}</span>\r\n                <input type=\"number\" className=\"form-control\" aria-label=\"D√ºr√ºm-fiyatƒ±\" placeholder={\"varsayƒ±lan: \" + defaultDurumCost} onChange={(e: any) => setPositiveNumberForm(e.target.value)} defaultValue={positiveNumberForm.toString()} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SettingsMenu;\r\n","// react\nimport { useState } from 'react';\n\n// bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\n\n// components\nimport Header from './components/Header';\nimport DurumContent from './components/DurumContent';\nimport SettingsMenu from './components/SettingsMenu';\n\n// options\nimport { defaultDurumCost } from './config/options';\n\n\nfunction App() {\n\n\tconst [durumCost, setDurumCost] = useState(defaultDurumCost);\n\tconst [isSettingsVisible, setIsSettingsVisible] = useState(false);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header isSettingsVisible={isSettingsVisible} setIsSettingsVisible={setIsSettingsVisible} />\n\n\t\t\t<DurumContent durumCost={durumCost} />\n\n\t\t\t{isSettingsVisible && <SettingsMenu durumCost={durumCost} setDurumCost={setDurumCost} />}\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}